# vim: ft=dockerfile expandtab
ARG distrib

FROM ${distrib}

# Do not install recommends and remove unused deps automatically:
RUN echo 'APT::Install-Recommends "0";' > \
      /etc/apt/apt.conf.d/no_recommends
RUN echo 'APT::Get::AutomaticRemove "1";' >> \
      /etc/apt/apt.conf.d/no_recommends

# Install a few things
RUN apt-get --yes update && \
    DEBIAN_FRONTEND=noninteractive \
      apt-get --yes upgrade && \
    DEBIAN_FRONTEND=noninteractive \
      apt-get --yes install \
        aspcud \
        binutils \
        bzip2 \
        ca-certificates \
        cmake \
        coreutils \
        cucumber \
        curl \
        emacs-nox \
        fakeroot \
        fuse \
        g++ \
        gcc \
        git \
        iproute2 \
        iputils-ping \
        imagemagick \
        less \
        libblas-dev \
        libffi-dev \
        liblapack-dev \
        liblmdb-dev \
        librdkafka-dev \
        libsasl2-dev \
        libsodium-dev \
        libsqlite3-0 \
        libssl-dev \
        libz-dev \
        m4 \
        make \
        manpages \
        manpages-dev \
        net-tools \
        netbase \
        ocaml-nox \
        patch \
        php-cli \
        procps \
        rsync \
        ruby-rspec \
        socat \
        sqlite3 \
        ssh-client \
        strace \
        sudo \
        unzip \
        valgrind \
        vim-nox \
        wget \
        xauth \
        z3

RUN if grep -q '^11' /etc/debian_version; then \
      DEBIAN_FRONTEND=noninteractive \
        apt-get --yes install qt5-image-formats-plugins qtbase5-dev; \
    else \
      DEBIAN_FRONTEND=noninteractive \
        apt-get --yes install qt5-default; \
    fi

COPY install-opam.sh /tmp
RUN echo | /tmp/install-opam.sh && \
    rm /tmp/install-opam.sh

RUN /usr/local/bin/opam init --no-setup --disable-sandboxing
RUN /usr/local/bin/opam update --yes
RUN opam switch install --yes ramen 4.11.2+flambda

# Environment
ENV OPAM_SWITCH_PREFIX=/root/.opam/ramen
ENV CAML_LD_LIBRARY_PATH=/root/.opam/ramen/lib/stublibs:/root/.opam/ramen/lib/ocaml/stublibs:/root/.opam/ramen/lib/ocaml
ENV OCAML_TOPLEVEL_PATH=/root/.opam/ramen/lib/toplevel
ENV MANPATH=:/root/.opam/ramen/man
ENV PATH=/root/.opam/ramen/bin:/root/.gem/ruby/2.5.0/bin/:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
ENV RAMEN_LIBS=/root/ramen/bundle

# Install linuxdeploy.AppImage and its qt plugin:
RUN wget https://github.com/linuxdeploy/linuxdeploy/releases/download/continuous/linuxdeploy-x86_64.AppImage -O /usr/bin/linuxdeploy-x86_64.AppImage
RUN chmod a+x /usr/bin/linuxdeploy-x86_64.AppImage
RUN wget https://github.com/linuxdeploy/linuxdeploy-plugin-qt/releases/download/continuous/linuxdeploy-plugin-qt-x86_64.AppImage -O /usr/bin/linuxdeploy-plugin-qt-x86_64.AppImage
RUN chmod a+x /usr/bin/linuxdeploy-plugin-qt-x86_64.AppImage

# qt5charts is not packaged in stretch for some reason, but easy to
# build from sources:
COPY getqt5charts /tmp
RUN /tmp/getqt5charts

RUN opam update
RUN opam install --yes depext
RUN opam depext --noninteractive \
      conf-gsl conf-blas conf-lapack conf-pkg-config sqlite3
RUN opam repo add --set-default ocalme \
      https://github.com/rixed/ocalme-opam-repository.git
RUN opam repo priority ocalme 1

# Install all ramen dependencies using opam
RUN opam install --yes inotify qtest

# For convenience:
RUN opam install --yes down ocp-index odig odoc

# For tools/ipcsv/doc-check
RUN opam install --yes ipaddr csv owww

# we need ocaml-lmdb master since 0.1 is very old
RUN cd /root && \
    git clone https://github.com/Drup/ocaml-lmdb.git && \
    cd ocaml-lmdb && \
    opam install --yes bigstringaf dune-configurator && \
    opam pin add --yes --inplace-build lmdb .

# Install all ramen dependencies using opam
RUN cd /root && \
    git clone https://github.com/rixed/ramen.git && \
    cd ramen && \
    git checkout v@PACKAGE_VERSION@ && \
    ./configure && \
    opam install --yes --deps-only .

# Perform a first build to get the submodule compiled already which save a lot
# of time later.
RUN cd /root/ramen && make dep && make -j3 && git clean -fdx

LABEL maintainer="rixed-docker@happyleptic.org"

WORKDIR /root/ramen
ENTRYPOINT ["/bin/bash"]
