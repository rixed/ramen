#!/bin/sh

set -e

cd /root/ramen

build() {
  echo "Cleaning previous deb files..."
  rm -f ramen.*.deb ramen.*.tgz

  opam install --yes --verbose --deps-only .
  make -j@CPU_NUMS@ deb tarball
}

pull() {
  echo "Updating the source tree"
  git checkout master && git pull && ./configure
  echo "New head at:"
  git show HEAD --summary
}

checkout() {
  rev="$1"
  echo "Checking ramen at revision $rev"
  git checkout "$rev" || true
}

check() {
  rev="$1"

  checkout "$rev"
  build
  make -j@CPU_NUMS@ check
}

syntax() {
  echo "Options: [--check revision]"
  exit 1
}

run_tui=yes
while test -n "$1" ; do case "$1" in
  (--check)
    check $2
    run_tui=no
    shift 2 ;;
  (*)
    syntax
    exit 1 ;;
esac ; done

while test "$run_tui" = yes ; do
  echo
  echo "1) Build version $(grep ^VERSION Makefile) - commit $(git rev-parse HEAD)"
  echo "2) Pull"
  echo "3) Checkout a particular tag/sha1"
  echo "4) Run a shell"
  echo "5) Exit"
  echo -n "Choice: "
  read REPLY

  case "$REPLY" in
    (1)
      build

      deb_file=$(ls -1 ramen.*.deb)
      tgz_file=$(ls -1 ramen.*.tgz)
      echo "Done. Get your file(s) with:"
      echo "docker cp <container id>:/root/ramen/$deb_file ."
      echo "docker cp <container id>:/root/ramen/$tgz_file ."
      echo
      ;;
    (2)
      pull ;;
    (3)
      echo -n "What version: "
      read REPLY
      if test -n "$REPLY" ; then
        echo "Checking out $REPLY"
        checkout "$REPLY" || true
      else
        echo "never mind."
      fi
      ;;
    (4)
      echo "Running bash. Enter ^D when done to return to this menu."
      /bin/bash
      ;;
    (5)
      exit
      ;;
    (*)
      echo "Redo from start?"
      ;;
  esac
done
