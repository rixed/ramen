-- Alert automatically generated by ramen v4.5.1 at 2020-09-29T14:15:04

-- Alerting program

DEFINE filtered AS
  FROM 'nonreg_0_0/f1'
  WHERE 'k' in [1;2;3]
  SELECT
    -- Re-aggregations:
    TRUNCATE(start, 0) AS start,
    start + 0 AS stop,
    sum 'k' AS 'k',
    sum 'r' AS 'r',
    'r' AS value, -- alias for simplicity
    min value,
    max value
  GROUP BY start // 0, 'k'
  COMMIT AFTER in.start > out.start + 1.5 * 0;

DEFINE ok AS
  FROM filtered
  SELECT *,
    min_value, max_value,
    IF true THEN value AS filtered_value,
    COALESCE(
      HYSTERESIS (filtered_value, 1, 1),
    true) AS ok
  GROUP BY k
  KEEP;

DEFINE alert AS
  FROM ok
  SELECT *,
    max_value, min_value,
    COALESCE(AVG(PAST 60 SECONDS OF float(not ok)) >= 1, false)
      AS firing,
    "test" AS id,
    1 AS certainty,
    string(min_value) || "," || string(max_value)
      AS values,
    "r" AS column,
    1 AS thresholds,
    60 AS duration,
    (IF firing THEN "r went above the configured threshold 1.000000.\n" || COALESCE("See " || env.VIEW_ALERT_URL || "&id=test" || " for details", "")
     ELSE "The value of r recovered.\n" || COALESCE("See " || env.VIEW_ALERT_URL || "&id=test" || " for details", "")) AS desc
  GROUP BY k
  AFTER CHANGED firing |? firing
    NOTIFY "r" || " (" || "nonreg_0_0/f1" || ") triggered" || ""
    AND KEEP;
